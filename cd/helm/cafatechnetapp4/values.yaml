# -- The Environment variable. It accepts: 'kuberentes-athens', 'kuberentes-uma', 'openshift'
environment: "openshift"

# pipeline. It accepts: validation, certification or verification
pipeline: verification

# -- If env: 'kuberentes-athens' or env: 'kuberentes-uma', use the Ip address dude for the kubernetes to your Ingress Controller ej: kubectl -n NAMESPACE_CAPIF get ing s
ingress_ip: 
    athens: "10.161.1.126"
    uma: "10.11.23.49"
    cosmote: "172.25.2.100"

kubernetesClusterDomain: cluster.local

env:
  netappId: "CAFA-NetApp-3"
  netappName: "CafaTechNetApp3"
  netappIp: "http://netapp:5555"
  netappUser: "netapp_user"
  netappPass: "netapp_pass"
  frontendAddress: "netapp.app.ocp-epg.hi.inet"
  serverForVapp: "netapp:5000"
  callbackAddress: "http://netapp:55555/nefcallbacks"
  frontencallbackdAddress: "http://netapp:5555"
  nefUser: "admin@my-email.com"
  nefPassword: "pass"
  nefAddress: "my-nef.apps.ocp-epg.hi.inet"
  capifHostname: "my-capif.apps.ocp-epg.hi.inet"
  capifPortHttp: "80"
  capifPortHttps: "443"
  capifPathToCerts: "certificates"
  environmentMode: production
  tsnAddress: my-tsn.apps.ocp-epg.hi.inet

netapp:
  cafatechNetapp3:
    image:
      # -- The docker image tag to use
      # -- @default Chart version
      tag: "cafatechnetapp4-cafatech-netapp-4"
  ports:
  - name: netapp
    port: 5555
    targetPort: 5555
  replicas: 1
  type: ClusterIP