apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbnetapp
  labels:
    io.kompose.service: dbnetapp
  {{- include "fogus-kube.labels" . | nindent 4 }}
  annotations:
    kompose.cmd: kompose convert -c
    kompose.version: 1.28.0 (c4137012e)
spec:
  replicas: {{ .Values.dbnetapp.replicas }}
  selector:
    matchLabels:
      io.kompose.service: dbnetapp
    {{- include "fogus-kube.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/fogusnetapp-default: "true"
        io.kompose.service: dbnetapp
      {{- include "fogus-kube.selectorLabels" . | nindent 8 }}
      annotations:
        kompose.cmd: kompose convert -c
        kompose.version: 1.28.0 (c4137012e)
        checksum/config: {{ include (print $.Template.BasePath "/env.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
        - name: regcred
      {{- if eq .Values.environment "kubernetes-athens" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.athens }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      {{- if eq .Values.environment "kubernetes-cosmote" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.cosmote }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      {{- if eq .Values.environment "kubernetes-uma" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.uma }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      containers:
      - env:
        - name: CALLBACK_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: CALLBACK_ADDRESS
              name: env
        - name: CAPIF_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: CAPIF_HOSTNAME
              name: env
        - name: CAPIF_PORT_HTTP
          valueFrom:
            configMapKeyRef:
              key: CAPIF_PORT_HTTP
              name: env
        - name: CAPIF_PORT_HTTPS
          valueFrom:
            configMapKeyRef:
              key: CAPIF_PORT_HTTPS
              name: env
        - name: FRONTEND_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: FRONTEND_ADDRESS
              name: env
        - name: NEF_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: NEF_ADDRESS
              name: env
        - name: NEF_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: NEF_PASSWORD
              name: env
        - name: NEF_USER
          valueFrom:
            configMapKeyRef:
              key: NEF_USER
              name: env
        - name: NETAPP_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: NETAPP_ADDRESS
              name: env
        - name: PATH_TO_CERTS
          valueFrom:
            configMapKeyRef:
              key: PATH_TO_CERTS
              name: env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env
        - name: VAPP_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: VAPP_ADDRESS
              name: env
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.dbnetapp.netapppostgres.image.repository }}-{{ .Values.dbnetapp.netapppostgres.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: Always
        name: netapppostgres
        resources:
            {{- toYaml .Values.dbnetapp.netapppostgres.resources | nindent 12 }}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  labels:
    io.kompose.service: netappdjango
  {{- include "fogus-kube.labels" . | nindent 4 }}
  annotations:
    kompose.cmd: kompose convert -c
    kompose.version: 1.28.0 (c4137012e)
spec:
  replicas: {{ .Values.django.replicas }}
  selector:
    matchLabels:
      io.kompose.service: netappdjango
    {{- include "fogus-kube.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/fogusnetapp-default: "true"
        io.kompose.service: netappdjango
      {{- include "fogus-kube.selectorLabels" . | nindent 8 }}
      annotations:
        kompose.cmd: kompose convert -c
        kompose.version: 1.28.0 (c4137012e)
        checksum/config: {{ include (print $.Template.BasePath "/env.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
        - name: regcred
      {{- if eq .Values.environment "kubernetes-athens" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.athens }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      {{- if eq .Values.environment "kubernetes-cosmote" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.cosmote }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      {{- if eq .Values.environment "kubernetes-uma" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.uma }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      containers:
      - args:
        - ./wait_db.sh
        - dbnetapp:5432
        - --
        - sh
        - docker_start_up.sh
        env:
        - name: CALLBACK_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: CALLBACK_ADDRESS
              name: env
        - name: CAPIF_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: CAPIF_HOSTNAME
              name: env
        - name: CAPIF_PORT_HTTP
          valueFrom:
            configMapKeyRef:
              key: CAPIF_PORT_HTTP
              name: env
        - name: CAPIF_PORT_HTTPS
          valueFrom:
            configMapKeyRef:
              key: CAPIF_PORT_HTTPS
              name: env
        - name: FRONTEND_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: FRONTEND_ADDRESS
              name: env
        - name: NEF_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: NEF_ADDRESS
              name: env
        - name: NEF_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: NEF_PASSWORD
              name: env
        - name: NEF_USER
          valueFrom:
            configMapKeyRef:
              key: NEF_USER
              name: env
        - name: NETAPP_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: NETAPP_ADDRESS
              name: env
        - name: PATH_TO_CERTS
          valueFrom:
            configMapKeyRef:
              key: PATH_TO_CERTS
              name: env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env
        - name: VAPP_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: VAPP_ADDRESS
              name: env
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.django.netappdjango.image.repository }}-{{ .Values.django.netappdjango.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: Always
        name: netappdjango
        ports:
        - containerPort: 8000
        resources:
            {{- toYaml .Values.django.netappdjango.resources | nindent 12 }}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fe
  labels:
    io.kompose.service: netappfe
  {{- include "fogus-kube.labels" . | nindent 4 }}
  annotations:
    kompose.cmd: kompose convert -c
    kompose.version: 1.28.0 (c4137012e)
spec:
  replicas: {{ .Values.netapp.replicas }}
  selector:
    matchLabels:
      io.kompose.service: netappfe
    {{- include "fogus-kube.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        io.kompose.network/fogusnetapp-default: "true"
        io.kompose.service: netappfe
      {{- include "fogus-kube.selectorLabels" . | nindent 8 }}
      annotations:
        kompose.cmd: kompose convert -c
        kompose.version: 1.28.0 (c4137012e)
        checksum/config: {{ include (print $.Template.BasePath "/env.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
        - name: regcred
      {{- if eq .Values.environment "kubernetes-athens" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.athens }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      {{- if eq .Values.environment "kubernetes-cosmote" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.cosmote }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      {{- if eq .Values.environment "kubernetes-uma" }}
      hostAliases:
        - ip: "{{ .Values.ingress_ip.uma }}"
          hostnames:
            - "{{ .Values.env.capifHostname }}"
            - "{{ .Values.env.nefAddress }}"
      {{- end }}
      containers:
      - env:
        - name: CALLBACK_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: CALLBACK_ADDRESS
              name: env
        - name: CAPIF_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: CAPIF_HOSTNAME
              name: env
        - name: CAPIF_PORT_HTTP
          valueFrom:
            configMapKeyRef:
              key: CAPIF_PORT_HTTP
              name: env
        - name: CAPIF_PORT_HTTPS
          valueFrom:
            configMapKeyRef:
              key: CAPIF_PORT_HTTPS
              name: env
        - name: FRONTEND_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: FRONTEND_ADDRESS
              name: env
        - name: NEF_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: NEF_ADDRESS
              name: env
        - name: NEF_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: NEF_PASSWORD
              name: env
        - name: NEF_USER
          valueFrom:
            configMapKeyRef:
              key: NEF_USER
              name: env
        - name: NETAPP_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: NETAPP_ADDRESS
              name: env
        - name: PATH_TO_CERTS
          valueFrom:
            configMapKeyRef:
              key: PATH_TO_CERTS
              name: env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env
        - name: VAPP_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: VAPP_ADDRESS
              name: env
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.netapp.netappfe.image.repository }}-{{ .Values.netapp.netappfe.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: Always
        name: netappfe
        ports:
        - containerPort: 4200
        resources:
            {{- toYaml .Values.netapp.netappfe.resources | nindent 12 }}
      restartPolicy: Always