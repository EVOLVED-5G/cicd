apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o dummy-netapp
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: python-netapp
  name: python-netapp
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: python-netapp
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -o dummy-netapp
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/demo-network: "true"
        io.kompose.service: python-netapp
    spec:
    {{- if or (eq .Values.env "kubernetes-athens") (eq .Values.env "kubernetes-uma") }}
      imagePullSecrets:
        - name: regcred
      {{- end }}
      containers:
        - env:
            - name: CAPIF_HOSTNAME
              value: {{ .Values.capif_hostname }}
            - name: CAPIF_PORT
              value: "80"
            - name: REDIS_HOST
              value: redis-dummy
            - name: REDIS_PORT
              value: "6379"
            - name: REQUESTS_CA_BUNDLE
              value: /usr/src/app/ca.crt
            - name: SSL_CERT_FILE
              value: /usr/src/app/ca.crt
          {{- if or (eq .Values.env "kubernetes-athens") (eq .Values.env "kubernetes-uma") }}
          image: 709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:dummy-netapp-python_netapp-latest
          {{- else }}
          image: dockerhub.hi.inet/evolved-5g/dummy-netapp/dummy-netapp-python_netapp:latest
          {{- end }}
          name: python-netapp
          resources: {}
      hostname: dummy
      restartPolicy: Always
status: {}
