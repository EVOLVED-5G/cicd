# -- The Environment variable. It accepts: 'kuberentes-athens', 'kuberentes-uma', 'openshift'
environment: "openshift"

# -- If env: 'kuberentes-athens' or env: 'kuberentes-uma', use the Ip address dude for the kubernetes to your Ingress Controller ej: kubectl -n NAMESPACE_CAPIF get ing s
ingress_ip: 
    athens: "10.161.1.126"
    uma: "10.11.23.49"

env:
  capifCallbackPort: "8080"
  capifCallbackUrl: http://dummy-network-app-capif.apps.ocp-epg.hi.inet:5000
  capifHostname: dummy-network-app-capif.apps.ocp-epg.hi.inet
  capifPort: "30048"
  capifPortHttps: "30548"
  nefCallbackIp: dummy-network-app-nef.apps.ocp-epg.hi.inet
  nefCallbackPort: "8080"
  nefAddress: dummy-network-app-nef.apps.ocp-epg.hi.inet
  nefPassword: pass
  nefPort: "30548"
  nefUser: admin@my-email.com
  pathToCerts: /usr/src/app/capif_onboarding
  redisHost: redis-db
  redisPort: "6379"
  requestsCaBundle: /usr/src/app/ca.crt
  sslCertFile: /usr/src/app/ca.crt
  tsnIp: host.docker.internal
  tsnPort: "8899"
kubernetesClusterDomain: cluster.local
pythonApp:
  pythonApp:
    # -- The docker image repository to use
    image:
      repository: 709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:dummy-network-app-python-app
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
  replicas: 1
redisDb:
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  redisDb:
    # -- The docker image repository to use
    image:
      repository: redis
      # -- The docker image tag to use
      # -- @default Chart version
      tag: latest
  replicas: 1
  type: ClusterIP
