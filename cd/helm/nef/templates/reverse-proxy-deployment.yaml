apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f docker-compose-resolved.yaml -o nef
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: reverse-proxy
  name: reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: reverse-proxy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f docker-compose-resolved.yaml -o nef
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: reverse-proxy
    spec:
      {{- if or (eq .Values.env "kubernetes-athens") (eq .Values.env "kubernetes-uma") }}
      imagePullSecrets:
        - name: regcred
      {{- end }}   
      containers:
        {{- if or (eq .Values.env "kubernetes-athens") (eq .Values.env "kubernetes-uma") }}
        - image: 709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-reverse_proxy-1-{{ .Values.version }}
        {{- else }}
        - image: dockerhub.hi.inet/evolved-5g/nef/nef_emulator-reverse_proxy-1:{{ .Values.version }}
        {{- end }}
          command: [ "/bin/sh", "-c" ]
          args:
            - /self-signed-crt.sh && /dynamic_ports.sh
            # - /docker-entrypoint.sh
            # - tail -f /dev/null
          env:
            - name: APP_ENV
              value: "prod"
            - name: APP_NAME
              value: "webserver"
            - name: APP_DEBUG
              value: "false"
            - name: SERVICE_NAME
              value: "webserver"
          name: reverse-proxy
          ports:
            - containerPort: 80
            - containerPort: 443
          resources: {}
      restartPolicy: Always
status: {}
