# -- The Environment variable. It accepts: 'kuberentes-athens', 'kuberentes-uma', 'openshift'
environment: "kubernetes-uma"

# -- If env: 'kuberentes-athens' or env: 'kuberentes-uma', use the Ip address dude for the kubernetes to your Ingress Controller ej: kubectl -n NAMESPACE_CAPIF get ing 
ingress_ip: 
    athens: "10.161.1.126"
    uma: "10.11.23.49"

backend:
  backend:
    image:
      # -- The docker image repository to use
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-backend-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
    imagePullPolicy: Always
  ingress:
    host: localization-nef.apps.ocp-epg.hi.inet
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  replicas: 1
  type: ClusterIP
env:
  backendCorsOrigins: '["https://5g-api-emulator.medianetlab.eu","http://localhost"]'
  backendTag: "1.0"
  capifHostname: localization-capif.apps.ocp-epg.hi.inet
  capifHttpPort: "80"
  capifHttpsPort: "443"
  dockerImageBackend: dimfrag/nef-backend
  dockerImageFrontend: frontend
  dockerImageProxy: dimfrag/nef-nginx
  domain: localhost
  emailsFromEmail: user@my-email.com
  externalNet: "true"
  firstSuperuser: admin@my-email.com
  firstSuperuserPassword: pass
  meConfigMongodbUrl: mongodb://root:pass@nef-mongo:27017/
  mongoClient: mongodb://nef-mongo:27017/
  mongoExpressEnableAdmin: "true"
  mongoPassword: pass
  mongoUser: root
#  nefHost: backend
  nginxHttp: "8090"
  nginxHttps: "4443"
  pgadminDefaultEmail: admin@my-email.com
  pgadminDefaultPassword: pass
  pgadminListenPort: "5050"
  postgresDb: app
  postgresPassword: pass
#  postgresServer: nef-db
  postgresUser: postgres
  production: "true"
  projectName: NEF_Emulator
  proxyTag: "1.0"
  secretKey: 2D47CF2958CEC7CC86C988E9F9684
  sentryDsn: ""
  serverHost: http://localhost
  serverName: localhost
  serverPort: "8888"
  smtpHost: mail.host.com
  smtpPassword: pass
  smtpPort: "465"
  smtpTls: "True"
  smtpUser: user
  usePublicKeyVerification: "true"
  usersOpenRegistration: "true"
db:
  db:
    env:
      pgdata: /var/lib/postgresql/data/pgdata
    # -- The docker image repository to use
    image:
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-db-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 0
  replicas: 1
  type: ClusterIP
#emu:
#  ports:
#  - name: http-port
#    port: 8090
#    protocol: TCP
#    targetPort: 80
#  - name: https-port
#    port: 4443
#    protocol: TCP
#    targetPort: 443
#  type: ClusterIP
kubernetesClusterDomain: cluster.local
mongo:
  nefMongo:
    # -- The docker image repository to use
    image:
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-mongo_nef-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 0
  replicas: 1
  type: ClusterIP
mongoExpress:
  mongoExpress:
    # -- The docker image repository to use
    image:
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-mongo-express-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 0
  replicas: 1
  type: ClusterIP
#reverseProxy:
#  replicas: 1
#  reverseProxy:
#    env:
#      appDebug: "false"
#      appEnv: prod
#      appName: webserver
#      serviceName: webserver
#    image:
#      repository: dimfrag/nef-nginx
#      tag: "1.0"
