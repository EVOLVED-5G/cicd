# -- The Environment variable. It accepts: 'kuberentes-athens', 'kuberentes-uma', 'openshift'
environment: "openshift"

# -- If env: 'kuberentes-athens' or env: 'kuberentes-uma', use the Ip address dude for the kubernetes to your Ingress Controller ej: kubectl -n NAMESPACE_CAPIF get ing 
ingress_ip: 
    athens: "10.161.1.126"
    uma: "10.11.23.49"

backend:
  backend:
    image:
      # -- The docker image repository to use
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-backend-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
    resources:
     limits:
       cpu: 100m
       memory: 128Mi
     requests:
       cpu: 100m
       memory: 128Mi
  ports:
  - name: backend
    port: 8888
    targetPort: 80
  replicas: 1
  type: ClusterIP
  ingress:
    host: "nef-test.apps.ocp-epg.hi.inet"
db:
  db:
    env:
      pgdata: /var/lib/postgresql/data/pgdata
    image:
      # -- The docker image repository to use
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-db-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
    resources:
     limits:
       cpu: 100m
       memory: 128Mi
     requests:
       cpu: 100m
       memory: 128Mi
  replicas: 1
  ports:
  - name: "db"
    port: 5432
    targetPort: 5432
  type: ClusterIP
env:
  backendCorsOrigins: '["https://5g-api-emulator.medianetlab.eu","http://localhost"]'
  dockerImageBackend: backend
  dockerImageFrontend: frontend
  emailsFromEmail: user@my-email.com
  firstSuperuser: admin@my-email.com
  firstSuperuserPassword: pass
  mongoPassword: pass
  mongoUser: root
  mongoClient: mongodb://mongo:27017
  pgadminDefaultEmail: admin@my-email.com
  pgadminDefaultPassword: pass
  pgadminListenPort: "5050"
  postgresDb: app
  postgresPassword: pass
  postgresServer: db
  postgresUser: postgres
  projectName: NEF_Emulator
  secretKey: 2D47CF2958CEC7CC86C988E9F9684
  sentryDsn: ""
  serverHost: http://backend
  serverName: backend
  serverPort: "8888"
  smtpHost: mail.host.com
  smtpPassword: pass
  smtpPort: "465"
  smtpTls: "True"
  smtpUser: user
  usersOpenRegistration: "true"
  usePublicKeyVerification: "True"
  capifHostname: "capif.apps.ocp-epg.hi.inet"
  capifHttpPort: "30048"
  capifHttpsPort: "30548"

kubernetesClusterDomain: cluster.local
mongo:
  mongo:
    image:
      # -- The docker image repository to use
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-mongo_nef-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
    resources:
     limits:
       cpu: 100m
       memory: 128Mi
     requests:
       cpu: 100m
       memory: 128Mi
  replicas: 1
  ports:
  - name: "mongo"
    port: 27017
    targetPort: 27017
  type: ClusterIP
mongoExpress:
  mongoExpress:
    image:
      # -- The docker image repository to use
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-mongo-express-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
    resources:
     limits:
       cpu: 100m
       memory: 128Mi
     requests:
       cpu: 100m
       memory: 128Mi
  ports:
  - name: "mongo-express"
    port: 8081
    targetPort: 8081
  replicas: 1
  type: ClusterIP
pgadmin:
  pgadmin:
    image:
      # -- The docker image repository to use
      repository: "709233559969.dkr.ecr.eu-central-1.amazonaws.com/evolved5g:nef_emulator-pgadmin-1"
      # -- The docker image tag to use
      # -- @default Chart version
      tag: ""
    resources:
     limits:
       cpu: 100m
       memory: 128Mi
     requests:
       cpu: 100m
       memory: 128Mi
  ports:
  - name: "pgadmin"
    port: 5050
    targetPort: 5050
  replicas: 1
  type: ClusterIP
